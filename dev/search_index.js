var documenterSearchIndex = {"docs":
[{"location":"#SynchrotronKernel.jl","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"","category":"section"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"CurrentModule = SynchrotronKernel\nDocTestSetup = quote\n    using SynchrotronKernel\n    using PyPlot\n    using LaTeXStrings\n\n    function axis_ticks_styling!(ax; size_minor_ticks::Int64=6, tick_label_size::Int64=15, color::String=\"k\")\n\n        ax.tick_params(reset=true, direction=\"in\", axis=\"both\", labelsize=tick_label_size,\n                        which=\"major\", size=size_minor_ticks<<1, width=1, color=color)\n        ax.tick_params(reset=true, direction=\"in\", axis=\"both\", labelsize=tick_label_size,\n                        which=\"minor\", size=size_minor_ticks, width=1, color=color)\n\n        ax.minorticks_on()\n\n        return ax\n    end\n\nend","category":"page"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"This package computes the first synchrotron function of a frequency ratio x = fracnunu_0 .","category":"page"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"F(x) = x int_x^infty K_frac53(t) dt.","category":"page"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"\nusing SynchrotronKernel # hide\nusing PyPlot # hide\nusing LaTeXStrings # hide\n \nfunction axis_ticks_styling!(ax; size_minor_ticks::Int64=6, tick_label_size::Int64=15, color::String=\"k\")   # hide\n                                                                                                            # hide\n    ax.tick_params(reset=true, direction=\"in\", axis=\"both\", labelsize=tick_label_size,                      # hide\n                    which=\"major\", size=size_minor_ticks<<1, width=1, color=color)                          # hide\n    ax.tick_params(reset=true, direction=\"in\", axis=\"both\", labelsize=tick_label_size,                      # hide\n                    which=\"minor\", size=size_minor_ticks, width=1, color=color)                             # hide\n                                                                                                            # hide\n    ax.minorticks_on()                                                                                      # hide\n                                                                                                            # hide\n    return ax                                                                                               # hide\nend                                                                                                         # hide\n\n# set up log range from 1.e-10 - 1.e2\nrng = -10.0:0.001:2\nx = 10.0.^rng\n\nF = synchrotron_kernel.(x)\n\nfig = figure() # hide\n\nax = gca() # hide\n\naxis_ticks_styling!(ax) # hide\n\nax.set_xscale(\"log\") # hide\nax.set_yscale(\"log\") # hide\n\nax.set_xlabel(L\"\\nu/\\nu_0\", fontsize=15) # hide\nax.set_ylabel(L\"F(\\nu/\\nu_0)\", fontsize=15) # hide\n\nax.set_ylim(1.e-6, 10.0) # hide\nax.set_xlim(1.e-10, 100.0) # hide\n\nplot(x, F) # hide\n\nsavefig(\"synch.svg\"); nothing # hide\n","category":"page"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"(Image: )","category":"page"}]
}
