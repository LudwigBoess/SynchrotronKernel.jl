var documenterSearchIndex = {"docs":
[{"location":"#SynchrotronKernel.jl","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"","category":"section"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"CurrentModule = SynchrotronKernel\nDocTestSetup = quote\n    using SynchrotronKernel\nend","category":"page"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"This package computes the synchrotron kernel for a frequency ratio x = fracnunu_0 and its polarisation components.","category":"page"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"\nusing SynchrotronKernel\nusing CairoMakie\n\nNbins = 1_000\nx = 10.0 .^ (LinRange(-10, 2, Nbins))\n\nF = synchrotron_kernel.(x)\n\nsk_ort = Vector{Float64}(undef, Nbins)\nsk_par = Vector{Float64}(undef, Nbins)\nfor i = 1:Nbins \n    sk_ort[i], sk_par[i] = synchrotron_polarisation(x[i])\nend\n\nfs    = 25\nscale = 550\nfig   = Figure(resolution = (2.1*scale, scale), fontsize=fs)\n\nax_l = Axis(fig[1, 1], xlabel=\"x\", ylabel=\"F(x)\")\nxlims!(ax_l, (0.0,10.0))\nylims!(ax_l, (0.0,1.0))\nlines!(ax_l, x, F, label=L\"F\", color=\"black\")\nlines!(ax_l, x, sk_ort, label=L\"F_{\\perp}\", color=\"black\", linestyle=:dash)\nlines!(ax_l, x, sk_par, label=L\"F_{\\parallel}\", color=\"black\", linestyle=:dot)\n\naxislegend(framevisible=false)\n\nax_r = Axis(fig[1, 2], xlabel = \"x\", ylabel = \"F(x)\", \n            xscale=log10, yscale=log10)\nxlims!(ax_r, (1.e-10,100))\nylims!(ax_r, (1.e-6,10.0))\nlines!(ax_r, x, F, label=L\"F\", color=\"black\")\nlines!(ax_r, x, sk_ort, color=\"black\", linestyle=:dash)\nlines!(ax_r, x, sk_par, label=L\"F_{\\para}\", color=\"black\", linestyle=:dot)\n\nsave(\"kernels.png\", fig); nothing # hide","category":"page"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"(Image: kernels)","category":"page"},{"location":"#Synchrotron-Kernel","page":"SynchrotronKernel.jl","title":"Synchrotron Kernel","text":"","category":"section"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"synchrotron_kernel","category":"page"},{"location":"#SynchrotronKernel.synchrotron_kernel","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.synchrotron_kernel","text":"synchrotron_kernel(x::Real)\n\nComputes the first synchrotron function at a given frequency ratio x = fracnunu_0.\n\nF(x) = x int_x^infty K_frac53(t) dt\n\nWrapper for F.\n\n\n\n\n\n","category":"function"},{"location":"#Polarisation","page":"SynchrotronKernel.jl","title":"Polarisation","text":"","category":"section"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"synchrotron_polarisation","category":"page"},{"location":"#SynchrotronKernel.synchrotron_polarisation","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.synchrotron_polarisation","text":"synchrotron_polarisation(x::Real)\n\nComputes the second synchrotron function at a given frequency ratio x = fracnunu_0. Returns a touple of (sk_ort, sk_par).\n\n\n\n\n\n","category":"function"},{"location":"#Synchrotron-Functions","page":"SynchrotronKernel.jl","title":"Synchrotron Functions","text":"","category":"section"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"SynchrotronKernel.F","category":"page"},{"location":"#SynchrotronKernel.F","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.F","text":"F(x::Real)\n\nComputes the first synchrotron function at a given frequency ratio x = fracnunu_0.\n\nF(x) = x int_x^infty K_frac53(t) dt\n\n\n\n\n\n","category":"function"},{"location":"","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.jl","text":"SynchrotronKernel.G","category":"page"},{"location":"#SynchrotronKernel.G","page":"SynchrotronKernel.jl","title":"SynchrotronKernel.G","text":"G(x::Real)\n\nComputes the second synchrotron function at a given frequency ratio x = fracnunu_0.\n\nG(x) = x K_frac23(x)\n\n\n\n\n\n","category":"function"}]
}
